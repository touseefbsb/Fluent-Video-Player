<Page
    x:Class="Fluent_Video_Player.Views.PlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:datatemplates="using:Fluent_Video_Player.DataTemplates"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:fluentvideoplayer="using:Fluent_Video_Player"
    xmlns:helpers="using:Fluent_Video_Player.Helpers"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkitConverter="using:Microsoft.Toolkit.Uwp.UI.Converters"
    Background="Transparent"
    Style="{StaticResource PageStyle}"
    mc:Ignorable="d">
    <Page.Resources>
        <toolkitConverter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter1" />
        <helpers:PlusOneConverter x:Key="PlusOneConverter1" />
    </Page.Resources>
    <RelativePanel>
        <!--<Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>-->
        <controls:DropShadowPanel
            x:Name="MpeShadow"
            Margin="8"
            extensions:VisualExtensions.Opacity="1"
            Background="{ThemeResource SystemControlBackgroundAltHighBrush}"
            RelativePanel.Above="{x:Bind ViewModel.MpeAbove, Mode=OneWay}"
            RelativePanel.AlignBottomWithPanel="{x:Bind ViewModel.MpeAlignBottomWithPanel, Mode=OneWay}"
            RelativePanel.AlignLeftWithPanel="{x:Bind ViewModel.MpeAlignLeftWithPanel, Mode=OneWay}"
            RelativePanel.AlignRightWithPanel="{x:Bind ViewModel.MpeAlignRightWithPanel, Mode=OneWay}"
            RelativePanel.AlignTopWithPanel="{x:Bind ViewModel.MpeAlignTopWithPanel, Mode=OneWay}"
            RelativePanel.LeftOf="{x:Bind ViewModel.MpeLeftOf, Mode=OneWay}"
            Style="{StaticResource GridShadow}">
            <MediaPlayerElement
                x:Name="mpe"
                AreTransportControlsEnabled="True"
                AutoPlay="True"
                PosterSource="{x:Bind ViewModel.PosterSource, Mode=OneWay}">
                <MediaPlayerElement.TransportControls>
                    <fluentvideoplayer:FluentMtc
                        x:Name="Fluentmtc"
                        DoubleTapped="Fluentmtc_DoubleTapped"
                        IsFastForwardButtonVisible="True"
                        IsFastForwardEnabled="True"
                        IsFastRewindButtonVisible="True"
                        IsFastRewindEnabled="True"
                        IsPlaybackRateButtonVisible="True"
                        IsPlaybackRateEnabled="True"
                        IsRepeatButtonVisible="True"
                        IsRepeatEnabled="True"
                        Loaded="Fluentmtc_Loaded" />
                </MediaPlayerElement.TransportControls>
            </MediaPlayerElement>
        </controls:DropShadowPanel>
        <Grid
            x:Name="SecondGrid"
            Width="{x:Bind ViewModel.SecondGridWidth, Mode=OneWay}"
            Height="{x:Bind ViewModel.SecondGridHeight, Mode=OneWay}"
            Margin="8"
            RelativePanel.AlignBottomWithPanel="{x:Bind ViewModel.SecondGridAlignBottomWithPanel, Mode=OneWay}"
            RelativePanel.AlignLeftWithPanel="{x:Bind ViewModel.SecondGridAlignLeftWithPanel, Mode=OneWay}"
            RelativePanel.AlignRightWithPanel="{x:Bind ViewModel.SecondGridAlignRightWithPanel, Mode=OneWay}"
            RelativePanel.AlignTopWithPanel="{x:Bind ViewModel.SecondGridAlignTopWithPanel, Mode=OneWay}"
            Visibility="{x:Bind ViewModel.SecondGridVisibility, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter1}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid
                Height="{x:Bind ViewModel.PlaylistHeaderHeight, Mode=OneWay}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{ThemeResource SystemControlChromeMediumAcrylicElementMediumBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Padding="12,4,0,4"
                    VerticalAlignment="Center"
                    Text="{x:Bind ViewModel.PlaylistTitle, Mode=OneWay}" />
                <TextBlock
                    Grid.Column="1"
                    Padding="12,4,4,4"
                    Style="{StaticResource CounterTextStyle}"
                    Text="{x:Bind PlaylistList.SelectedIndex, Converter={StaticResource PlusOneConverter1}, Mode=OneWay}" />
                <TextBlock
                    Grid.Column="2"
                    Style="{StaticResource CounterTextStyle}"
                    Text=" / " />
                <TextBlock
                    Grid.Column="3"
                    Style="{StaticResource CounterTextStyle}"
                    Text="{x:Bind ViewModel.Source.Count, Mode=OneWay}" />

            </Grid>
            <controls:AdaptiveGridView
                x:Name="PlaylistList"
                Grid.Row="1"
                animations:ReorderGridAnimation.Duration="250"
                DesiredWidth="{x:Bind ViewModel.PlayListDesiredWidth, Mode=OneWay}"
                ItemHeight="{x:Bind ViewModel.PlayListItemHeight, Mode=OneWay}"
                ItemsSource="{x:Bind ViewModel.Source, Mode=OneWay}"
                OneRowModeEnabled="{x:Bind ViewModel.OneRowMode, Mode=OneWay}"
                SelectionChanged="PlaylistSelectionChanged"
                SelectionMode="Single"
                StretchContentForSingleRow="False"
                TabFocusNavigation="Local">
                <controls:AdaptiveGridView.ItemTemplate>
                    <DataTemplate x:DataType="helpers:FluentPlaybackItem">
                        <datatemplates:PlaylistTemplate MyVideo="{x:Bind THIS}" />
                    </DataTemplate>
                </controls:AdaptiveGridView.ItemTemplate>
            </controls:AdaptiveGridView>
        </Grid>
        <controls:InAppNotification
            x:Name="ResumeInAppNotification"
            Grid.Row="1"
            Grid.RowSpan="4"
            Grid.ColumnSpan="4"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            AnimationDuration="00:00:00.4000"
            Background="Transparent"
            BorderThickness="0"
            IsTabStop="False"
            ShowDismissButton="False">
            <controls:InAppNotification.ContentTemplate>
                <DataTemplate>
                    <Grid Padding="12" Background="{ThemeResource SystemControlChromeHighAcrylicElementMediumBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            x:Uid="ResumeBlock"
                            Padding="8"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextTrimming="CharacterEllipsis"
                            TextWrapping="Wrap" />
                        <Button
                            x:Uid="Yes"
                            Grid.Column="1"
                            Width="100"
                            Margin="4"
                            Click="ResumeYesClicked"
                            IsTabStop="False"
                            Style="{ThemeResource ButtonRevealStyle}" />
                        <Button
                            x:Uid="No"
                            Grid.Column="2"
                            Width="100"
                            Margin="4"
                            Click="ResumeNoClicked"
                            IsTabStop="False"
                            Style="{ThemeResource ButtonRevealStyle}" />
                    </Grid>
                </DataTemplate>

            </controls:InAppNotification.ContentTemplate>
        </controls:InAppNotification>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="CurrentStateChanged">
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.StateChangedCommand}" />
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <VisualState x:Name="PanoramicState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>
